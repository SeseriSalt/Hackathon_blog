<%= render 'layouts/header' %>

<script>
    function cursor_position(textarea, position){
      textarea.focus({ preventScroll: true });
  		textarea.setSelectionRange(position, position);
    }
    function add(str){
      var area =  document.getElementById("blog_content");
      var cursor = area.selectionStart;
      area.value = area.value.substr(0, cursor)
  			         + str
  			         + area.value.substr(cursor);
  		var position = cursor + str.length;
  		cursor_position(area, position);
    }
    
    function cover(str){
      var area =  document.getElementById("blog_content");
      var start = area.selectionStart;
      var end = area.selectionEnd;
      area.value = area.value.substr(0, start)
  			         + ' ' + str
  			         + area.value.substr(start, end - start)
  			         + str + ' '
  			         + area.value.substr(end);
  		var position = 2 * str.length + end + 2;
  		cursor_position(area, position);
    }
    function coverall(str) {
      var area =  document.getElementById("blog_content");
      var start = area.selectionStart;
      var end = area.selectionEnd;
      var content = area.value.slice(start, end)
      var texts_between_new_line = content.split("\n");
      var retString = "";
      for( var i=0 ; i < texts_between_new_line.length ; i++ ) {
        if( !(i == texts_between_new_line.length-1 && texts_between_new_line[i].length == 0) ) {
           // 「最後の空行」以外なら処理(＝先頭に文字列を追加)を行う
           retString += str + texts_between_new_line[i] + "\n";
        }
      }
      area.value = area.value.substr(0, start)
  			         + retString
  			         + area.value.substr(end);
  	  var position = end + texts_between_new_line.length + 1
      cursor_position(area, position);
    }
    function cover_num() {
      var area =  document.getElementById("blog_content");
      var start = area.selectionStart;
      var end = area.selectionEnd;
      var content = area.value.slice(start, end)
      var texts_between_new_line = content.split("\n");
      var retString = "";
      for( var i=0 ; i < texts_between_new_line.length ; i++ ) {
        if( !(i == texts_between_new_line.length-1 && texts_between_new_line[i].length == 0) ) {
           // 「最後の空行」以外なら処理(＝先頭に文字列を追加)を行う
           retString += (i+1) + '\. ' + texts_between_new_line[i] + "\n";
        }
      }
      area.value = area.value.substr(0, start)
  			         + "\n" + retString
  			         + area.value.substr(end);
  	  var position = end + texts_between_new_line.length + 1
      cursor_position(area, position);
    }
    function midashi1() {
      add("# ")
    }
    function midashi2() {
      add("## ")
    }
    function midashi3() {
      add("### ")
    }
    function midashi4() {
      add("#### ")
    }
    function midashi5() {
      add("##### ")
    }
    function futoji(){
      cover('**')
    }
    function inline(){
      cover("`")
    }
    function uchikeshi(){
      cover("~~")
    }
    function simple_list(){
      coverall('+ ')
    }
    function num_list(){
      cover_num()
    }
    function quote(){
      coverall('> ')
    }
    function link(){
      add('[リンクテキスト](URL "タイトル(任意)")')
    }
    function image_link(){
      add('![代替テキスト](画像のURL "画像タイトル(任意)")')
    }
    function youtube(){
      add('<iframe width="560" height="315" src="URLをここに貼ってください" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" loading="lazy" allowfullscreen></iframe>')
    }
    $(function() {
    // previewボタンが押されたらイベント発火
    $('#preview').on('click', function() {
      var text = $('#blog_content').val();
      $.ajax({  
        url: '/api/blogs/preview',
        type: 'GET',
        dataType: 'json',
        data: { body: text }
      })
      .done(function(p_text) {
        $('#preview_text').empty().append(p_text.body);
      })
    })
  })
</script>

<div class="container">
  <h1>投稿の作成</h1>
  <%= render 'markdown' %>
    <%= form_with(model: @blog, local: true) do |f| %>
      <div class="mb-3">
        <%= f.label :title, class: "form-label"%>
        <%= f.text_field :title, placeholder: "タイトル", class: "form-label"  %>
      </div>
      <div class="mb-3">
        <%= f.label :tag, class: "form-label"%>
        <%= f.text_field :tag, placeholder: "ジャンル" , class: "form-label" %>
      </div>
      <div class="mb-3 text_area">
        <%= f.label :content, class: "form-label"%>
        <%= f.text_area :content, placeholder: "投稿を作成...", class: "form-control"%>
      </div>
      <%= f.submit "ブログを投稿", class: "btn btn-primary" %>
    <% end %>
  <%= render "preview_btn" %>
</div>